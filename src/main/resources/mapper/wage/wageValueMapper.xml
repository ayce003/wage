<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ycjd.payslip.dao.wage.IWageValueDao">
    <!--########################################################################################################################-->
    <select id="findWageValueListByCondition" parameterType="WageValue" resultType="WageValue">
        select
         <choose>
             <when test="pager!=null and pager.includes!=null">
                 <foreach collection="pager.includes" item="field" separator=",">
                     T.${@cn.hutool.core.util.StrUtil@toUnderlineCase(field)}
                 </foreach>
             </when>
             <when test="pager!=null and pager.excludes!=null">
                 <trim suffixOverrides=",">
                         <if test="!pager.excludes.contains('id')">
                             T.id,
                         </if>
                         <if test="!pager.excludes.contains('wageAttributeId')">
                             T.wage_attribute_id,
                         </if>
                         <if test="!pager.excludes.contains('valueSize')">
                             T.value_size,
                         </if>
                         <if test="!pager.excludes.contains('recordId')">
                             T.record_id,
                         </if>

                 </trim>
             </when>
             <otherwise>
                 T.*
             </otherwise>
         </choose>
         from wage_value T
        <where>
              <if test="wageAttributeId!=null">
                    <choose>
                         <when test="pager!=null and pager.like=='wageAttributeId'">
                             T.wage_attribute_id like concat('%',#{wageAttributeId},'%')
                         </when>
                         <otherwise>
                             T.wage_attribute_id=#{wageAttributeId}
                         </otherwise>
                      </choose>
              </if>
              <if test="valueSize!=null">
                    <choose>
                         <when test="pager!=null and pager.like=='valueSize'">
                            and T.value_size like concat('%',#{valueSize},'%')
                         </when>
                         <otherwise>
                            and T.value_size=#{valueSize}
                         </otherwise>
                      </choose>
              </if>
              <if test="recordId!=null">
                    <choose>
                         <when test="pager!=null and pager.like=='recordId'">
                            and T.record_id like concat('%',#{recordId},'%')
                         </when>
                         <otherwise>
                            and T.record_id=#{recordId}
                         </otherwise>
                      </choose>
              </if>

        </where>
        <if test="pager!=null and pager.sortField!=null and pager.sortOrder!=null">
            order by T.${@cn.hutool.core.util.StrUtil@toUnderlineCase(pager.sortField)} ${@cn.hutool.core.util.StrUtil@toUnderlineCase(pager.sortOrder)}
        </if>
        <if test="pager!=null and  pager.paging">
            limit #{pager.beginRow},#{pager.pageSize}
        </if>
    </select>
    <select id="findWageValueCountByCondition" parameterType="WageValue" resultType="long">
        select count(*) from wage_value T
        <where>
              <if test="wageAttributeId!=null">
                    <choose>
                         <when test="pager!=null and pager.like=='wageAttributeId'">
                             T.wage_attribute_id like concat('%',#{wageAttributeId},'%')
                         </when>
                         <otherwise>
                             T.wage_attribute_id=#{wageAttributeId}
                         </otherwise>
                      </choose>
            </if>
              <if test="valueSize!=null">
                    <choose>
                         <when test="pager!=null and pager.like=='valueSize'">
                            and T.value_size like concat('%',#{valueSize},'%')
                         </when>
                         <otherwise>
                            and T.value_size=#{valueSize}
                         </otherwise>
                      </choose>
            </if>
              <if test="recordId!=null">
                    <choose>
                         <when test="pager!=null and pager.like=='recordId'">
                            and T.record_id like concat('%',#{recordId},'%')
                         </when>
                         <otherwise>
                            and T.record_id=#{recordId}
                         </otherwise>
                      </choose>
            </if>

        </where>
    </select>
    <select id="findWageValueById" resultType="WageValue">
        select * from wage_value where id=#{id}
    </select>
    <select id="findOneWageValueByCondition" parameterType="WageValue" resultType="WageValue">
        select
         <choose>
             <when test="pager!=null and pager.includes!=null">
                 <foreach collection="pager.includes" item="field" separator=",">
                     T.${@cn.hutool.core.util.StrUtil@toUnderlineCase(field)}
                 </foreach>
             </when>
             <when test="pager!=null and pager.excludes!=null">
                 <trim suffixOverrides=",">
                         <if test="!pager.excludes.contains('id')">
                             T.id,
                         </if>
                         <if test="!pager.excludes.contains('wageAttributeId')">
                             T.wage_attribute_id,
                         </if>
                         <if test="!pager.excludes.contains('valueSize')">
                             T.value_size,
                         </if>
                         <if test="!pager.excludes.contains('recordId')">
                             T.record_id,
                         </if>

                 </trim>
             </when>
             <otherwise>
                 T.*
             </otherwise>
         </choose>
         from wage_value T
        <where>
              <if test="wageAttributeId!=null">
                 T.wage_attribute_id=#{wageAttributeId}
              </if>
              <if test="valueSize!=null">
                and T.value_size=#{valueSize}
              </if>
              <if test="recordId!=null">
                and T.record_id=#{recordId}
              </if>

        </where>
    </select>
    <insert id="saveWageValue" parameterType="WageValue">
        insert into wage_value
         (
            id,
            wage_attribute_id,
            value_size,
            record_id,
            salt

        ) values
         (
                #{id}
                ,
                #{wageAttributeId}
                ,
                #{valueSize}
                ,
                #{recordId}
                ,
                #{salt}

                
         )
    </insert>
    <update id="updateWageValue" parameterType="WageValue">
        update wage_value
        <set>
                    <if test="wageAttributeId!=null ">
                        wage_attribute_id=#{wageAttributeId},
                    </if>
                    <if test="valueSize!=null ">
                        value_size=#{valueSize},
                    </if>
                    <if test="recordId!=null ">
                        record_id=#{recordId},
                    </if>

          </set>
         where id=#{id}
    </update>
    <delete id="deleteWageValue" >
        delete from wage_value where id=#{id}
    </delete>
    <delete id="deleteWageValueByCondition" >
        delete from wage_value
        <where>
              <if test="id!=null">
                 id=#{id}
              </if>
              <if test="wageAttributeId!=null">
                and wage_attribute_id=#{wageAttributeId}
              </if>
              <if test="valueSize!=null">
                and value_size=#{valueSize}
              </if>
              <if test="recordId!=null">
                and record_id=#{recordId}
              </if>

        </where>
    </delete>
    <insert id="batchSaveWageValue" parameterType="WageValue">
        INSERT INTO wage_value (  id,  wage_attribute_id,  value_size,  record_id )
        VALUES
        <foreach collection="list" item="wageValue" separator=",">
            (  #{wageValue.id},  #{wageValue.wageAttributeId},  #{wageValue.valueSize},  #{wageValue.recordId}  )
        </foreach>
    </insert>
    <!--########################################################################################################################-->
    <delete id="deleteWageValueByRecordId" >
        delete from wage_value where record_id=#{id}
    </delete>
</mapper>